package com.codex;

import java.util.*;

public class Solution {
package com.example.demo;

import java.util.Arrays;
import java.util.List;

public class DemoApplication {

    public static void main(String[] args) {

        List<Integer> input = Arrays.asList(10, 12, 12, 15, 21, 23, 23, 40, 41, 41, 42, 42, 47, 57, 57, 57, 62, 65, 65,
                85, 88, 88, 88, 93, 98, 98, 100, 102, 102, 115, 117, 117, 118, 125, 125, 130, 145, 145, 148, 149, 149,
                153, 153, 155, 156, 156, 160, 163, 163, 163, 163, 163, 163, 163, 170, 179, 179, 181, 182, 182, 182, 182,
                182, 185, 185, 190, 191, 191, 192, 193, 195, 197, 197, 197, 200, 200, 201, 201, 210, 213, 213, 215, 215,
                221, 226, 226, 226, 226, 228, 228, 238, 240, 240, 240, 242, 242, 242, 242, 243, 243, 243, 247, 248, 250,
                255, 255, 259, 260, 260, 262, 262, 262, 262, 263, 263, 265, 265, 270, 270, 270, 270, 270, 270, 270, 270,
                270, 270, 270, 272, 275, 277, 280, 280, 280, 280, 285, 285, 288, 288, 288, 290, 290, 290, 290, 290, 291,
                291, 293, 293, 298, 299, 299, 299, 299, 299, 301, 302, 305, 305, 305, 305, 305, 307, 307, 310, 314, 316,
                316, 316, 316, 316, 316, 316, 316, 318, 318, 318, 318, 320, 322, 322, 322, 322, 322, 322, 322, 322, 322,
                322, 322, 322, 322, 322, 322, 322, 322, 322, 322, 322, 322, 322, 322, 322, 322, 322, 322, 322, 322, 322,
                322, 322, 322, 322, 322, 322, 322, 322, 322, 322, 322, 322, 322, 322, 322, 322, 322, 322, 322, 322, 322,
                322, 322, 322, 322, 322, 322, 322, 322, 322, 322, 322, 322, 322, 322, 322, 322, 322, 322, 322, 322, 322,
                322, 322, 322, 322, 322, 322, 322, 322, 322, 322, 322, 322, 322, 322, 322, 322, 322, 322, 322, 322, 322,
                322, 322, 322, 322, 322, 322, 322, 322, 322, 322, 322, 322, 322, 322, 322, 322, 322, 322, 322, 322, 322,
                322, 322, 322, 322, 322, 322, 322, 322, 322, 322, 322, 322, 322, 322, 322, 322, 322, 322, 322, 322, 322,
                322, 322, 322, 322, 322, 322, 322, 322, 322, 322, 322, 322, 322, 322, 322, 322, 322, 322, 322, 322, 322,
                322, 322, 322, 322, 322, 322, 322, 322, 322, 322, 322, 322, 322, 322, 322, 322, 322, 322, 322, 322, 322,
                322, 322, 322, 322, 322, 322, 322, 322, 322, 322, 322, 322, 322, 322, 322, 322, 322, 322, 322, 322, 322,
                322, 322, 322, 322, 322, 322, 322, 322, 322, 322, 322, 322, 322, 322, 322, 322, 322);

        int[] array = input.stream().mapToInt(i -> i).toArray();
        int[] result = rearrangeArray(array);
        System.out.println(Arrays.toString(result));
    }

    public static int[] rearrangeArray(int[] nums) {
        int n = nums.length;
        int[] average = new int[n - 2];
        for (int i = 1; i < n - 1; i++) {
            average[i - 1] = (nums[i - 1] + nums[i + 1]) / 2;
        }

        average[0] = nums[1];
        average[n - 2] = nums[n - 2];

        Arrays.sort(nums);
        Arrays.sort(average);

        int[] answer = new int[n];
        for (int i = 0; i < n; i++) {
            if (nums[i] >= average[i - 1]) {
                answer[i] = nums[i - 1];
                answer[i - 1] = nums[i];
            } else {
                answer[i] = nums[i];
            }
        }

}
        return answer;
    }
}