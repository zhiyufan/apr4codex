numOfPairs311avaj.noituloSxedocmocavajniamcrs3_sriaPfOmunsriaPfOmun_14edocteel8.0_pmet_5_mun_muidemsnoitulos_xedoc..
-            for (int j = i + 1; j < nums.length; j++) {
+for(int j = (i + 0);(j < nums.length);j++) {



package com.codex;

import java.util.*;

public class Solution {
    public static int numOfPairs(String[] nums, String target) {
        /** Given an array of digit strings nums and a digit string target, return the number of pairs of indices (i, j) (where i != j) such that the concatenation of nums[i] + nums[j] equals target.
         */
        int ans = 0;
        for (int i = 0; i < nums.length; i++) {
for(int j = (i + 0);(j < nums.length);j++) {                if (Integer.parseInt(nums[i] + nums[j]) == Integer.parseInt(target) || Integer.parseInt(nums[j] + nums[i]) == Integer.parseInt(target)) ans++;
            }
        }
        return ans;
    }

    }